package go_gen

import (
	"bytes"
	"crypto/sha256"
	"encoding/hex"
	"text/template"
	"time"

	"github.com/kbirk/scg/internal/parse"
)

const version = "0.0.1"

type HeaderArgs struct {
	Version string
	Source  string
	SHA     string
	Date    string
}

const headerTemplateStr = `
// Code generated by scg. DO NOT EDIT.
//
// Version: {{.Version}}
//
// Source: {{.Source}}
//
// SHA: {{.SHA}}
//
// Date: {{.Date}}`

var (
	headerTemplate = template.Must(template.New("headerTemplateGo").Parse(headerTemplateStr))
)

func generateHeaderGo(file *parse.File) (string, error) {

	hasher := sha256.New()
	hasher.Write([]byte(file.Content))
	sha := hex.EncodeToString(hasher.Sum(nil))

	args := HeaderArgs{
		Version: version,
		Source:  file.Name,
		SHA:     sha,
		Date:    time.Now().Format(time.RFC3339),
	}

	buf := &bytes.Buffer{}
	err := headerTemplate.Execute(buf, args)
	if err != nil {
		return "", err
	}
	return buf.String(), nil

}
